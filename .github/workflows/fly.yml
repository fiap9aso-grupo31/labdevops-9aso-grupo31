# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que ir치 acionar a pipeline
on: 
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3'

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Requirements
        run:  pip install flask

      - name: Unit Test
        run: python -m unittest -v test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Deploy: 
    name: Deploy_app
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0


      # Autenticando fly.io
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy #--remote-only
      #- run: flyctl status -t $FLY_API_TOKEN -a labdevops-9aso-grupo31
      #- run: flyctl deploy --remote-only
      #- run: flyctl ips allocate-v4 --shared 
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      # Adicionando o Reposit칩rio Remoto do Heroku para poder enviar o c칩digo da app
      #- name: Add Heroku Remote
      #  run: heroku git:remote --app $HEROKU_APP_NAME
      #  env:
      #      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

      # Enviando o c칩digo da App para o Heroku fazer Deploy
      #- name: Push to Heroku & Deploy
      #  run: git push heroku HEAD:main --force

      #Grupo31
