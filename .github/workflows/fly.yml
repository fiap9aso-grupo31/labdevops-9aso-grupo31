# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3'

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Requirements
        run:  pip install flask flask-wtf tox

      - name: Unit Test
        run: tox -e py

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Docker Login
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  Deploy:
    name: Deploy_app
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0


      # Autenticando fly.io
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy #--remote-only
      - run: flyctl status -t $FLY_API_TOKEN -a labdevops-9aso-grupo31
      #- run: flyctl deploy --remote-only
      #- run: flyctl ips allocate-v4 --shared 

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        run: |-
          gcloud run deploy ${{ vars.GOOGLE_MYAPP }} \
            --quiet \
            --region  ${{ vars.GOOGLE_REGION }} \
            --image ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest \
            --platform managed \
            --allow-unauthenticated \
            --project ${{ vars.GOOGLE_PROJECT_ID }} \
            --format json

    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}


      #Grupo31
